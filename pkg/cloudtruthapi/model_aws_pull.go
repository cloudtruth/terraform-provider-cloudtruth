/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
)

// checks if the AwsPull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPull{}

// AwsPull Pull actions can be configured to get configuration and secrets from integrations on demand.
type AwsPull struct {
	Url string `json:"url"`
	// Unique identifier for the action.
	Id string `json:"id"`
	// The action name.
	Name string `json:"name"`
	// The optional description for the action.
	Description *string `json:"description,omitempty"`
	LatestTask NullableAwsPullLatestTask `json:"latest_task"`
	CreatedAt time.Time `json:"created_at"`
	ModifiedAt time.Time `json:"modified_at"`
	// Allow the pull to create environments.  Any automatically created environments will be children of the `default` environment.  If an environment needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it.
	CreateEnvironments *bool `json:"create_environments,omitempty"`
	// Allow the pull to create projects.  If a project needs to be created but the action does not allow it, a task step will be added with a null operation, and success_detail will indicate the action did not allow it.
	CreateProjects *bool `json:"create_projects,omitempty"`
	// When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed.
	DryRun *bool `json:"dry_run,omitempty"`
	// Values being managed by a mapped pull.
	MappedValues []Value `json:"mapped_values"`
	Mode ModeEnum `json:"mode"`
	Region AwsRegionEnum `json:"region"`
	Service AwsServiceEnum `json:"service"`
	// Defines a pattern matching string that contains either mustache or regular expression syntax (with named capture groups) that locate the environment, project, and parameter name of the content you are looking for.  If you are using mustache pattern matching, use:    - ``{{ environment }}`` to identify the environment name   - ``{{ parameter }}`` to identify the parameter name   - ``{{ project }}`` to identify the project name  If you are using a regular expression, use Python syntax with named capture groups that locate the `environment`, `project`, and `parameter`.
	Resource NullableString `json:"resource"`
}

// NewAwsPull instantiates a new AwsPull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPull(url string, id string, name string, latestTask NullableAwsPullLatestTask, createdAt time.Time, modifiedAt time.Time, mappedValues []Value, mode ModeEnum, region AwsRegionEnum, service AwsServiceEnum, resource NullableString) *AwsPull {
	this := AwsPull{}
	this.Url = url
	this.Id = id
	this.Name = name
	this.LatestTask = latestTask
	this.CreatedAt = createdAt
	this.ModifiedAt = modifiedAt
	this.MappedValues = mappedValues
	this.Mode = mode
	this.Region = region
	this.Service = service
	this.Resource = resource
	return &this
}

// NewAwsPullWithDefaults instantiates a new AwsPull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPullWithDefaults() *AwsPull {
	this := AwsPull{}
	return &this
}

// GetUrl returns the Url field value
func (o *AwsPull) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AwsPull) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *AwsPull) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AwsPull) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AwsPull) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AwsPull) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsPull) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPull) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsPull) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AwsPull) SetDescription(v string) {
	o.Description = &v
}

// GetLatestTask returns the LatestTask field value
// If the value is explicit nil, the zero value for AwsPullLatestTask will be returned
func (o *AwsPull) GetLatestTask() AwsPullLatestTask {
	if o == nil || o.LatestTask.Get() == nil {
		var ret AwsPullLatestTask
		return ret
	}

	return *o.LatestTask.Get()
}

// GetLatestTaskOk returns a tuple with the LatestTask field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsPull) GetLatestTaskOk() (*AwsPullLatestTask, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestTask.Get(), o.LatestTask.IsSet()
}

// SetLatestTask sets field value
func (o *AwsPull) SetLatestTask(v AwsPullLatestTask) {
	o.LatestTask.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *AwsPull) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AwsPull) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *AwsPull) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *AwsPull) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetCreateEnvironments returns the CreateEnvironments field value if set, zero value otherwise.
func (o *AwsPull) GetCreateEnvironments() bool {
	if o == nil || IsNil(o.CreateEnvironments) {
		var ret bool
		return ret
	}
	return *o.CreateEnvironments
}

// GetCreateEnvironmentsOk returns a tuple with the CreateEnvironments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPull) GetCreateEnvironmentsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateEnvironments) {
		return nil, false
	}
	return o.CreateEnvironments, true
}

// HasCreateEnvironments returns a boolean if a field has been set.
func (o *AwsPull) HasCreateEnvironments() bool {
	if o != nil && !IsNil(o.CreateEnvironments) {
		return true
	}

	return false
}

// SetCreateEnvironments gets a reference to the given bool and assigns it to the CreateEnvironments field.
func (o *AwsPull) SetCreateEnvironments(v bool) {
	o.CreateEnvironments = &v
}

// GetCreateProjects returns the CreateProjects field value if set, zero value otherwise.
func (o *AwsPull) GetCreateProjects() bool {
	if o == nil || IsNil(o.CreateProjects) {
		var ret bool
		return ret
	}
	return *o.CreateProjects
}

// GetCreateProjectsOk returns a tuple with the CreateProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPull) GetCreateProjectsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateProjects) {
		return nil, false
	}
	return o.CreateProjects, true
}

// HasCreateProjects returns a boolean if a field has been set.
func (o *AwsPull) HasCreateProjects() bool {
	if o != nil && !IsNil(o.CreateProjects) {
		return true
	}

	return false
}

// SetCreateProjects gets a reference to the given bool and assigns it to the CreateProjects field.
func (o *AwsPull) SetCreateProjects(v bool) {
	o.CreateProjects = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *AwsPull) GetDryRun() bool {
	if o == nil || IsNil(o.DryRun) {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPull) GetDryRunOk() (*bool, bool) {
	if o == nil || IsNil(o.DryRun) {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *AwsPull) HasDryRun() bool {
	if o != nil && !IsNil(o.DryRun) {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *AwsPull) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetMappedValues returns the MappedValues field value
func (o *AwsPull) GetMappedValues() []Value {
	if o == nil {
		var ret []Value
		return ret
	}

	return o.MappedValues
}

// GetMappedValuesOk returns a tuple with the MappedValues field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetMappedValuesOk() ([]Value, bool) {
	if o == nil {
		return nil, false
	}
	return o.MappedValues, true
}

// SetMappedValues sets field value
func (o *AwsPull) SetMappedValues(v []Value) {
	o.MappedValues = v
}

// GetMode returns the Mode field value
func (o *AwsPull) GetMode() ModeEnum {
	if o == nil {
		var ret ModeEnum
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetModeOk() (*ModeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *AwsPull) SetMode(v ModeEnum) {
	o.Mode = v
}

// GetRegion returns the Region field value
func (o *AwsPull) GetRegion() AwsRegionEnum {
	if o == nil {
		var ret AwsRegionEnum
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetRegionOk() (*AwsRegionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AwsPull) SetRegion(v AwsRegionEnum) {
	o.Region = v
}

// GetService returns the Service field value
func (o *AwsPull) GetService() AwsServiceEnum {
	if o == nil {
		var ret AwsServiceEnum
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *AwsPull) GetServiceOk() (*AwsServiceEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *AwsPull) SetService(v AwsServiceEnum) {
	o.Service = v
}

// GetResource returns the Resource field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsPull) GetResource() string {
	if o == nil || o.Resource.Get() == nil {
		var ret string
		return ret
	}

	return *o.Resource.Get()
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsPull) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resource.Get(), o.Resource.IsSet()
}

// SetResource sets field value
func (o *AwsPull) SetResource(v string) {
	o.Resource.Set(&v)
}

func (o AwsPull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["latest_task"] = o.LatestTask.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["modified_at"] = o.ModifiedAt
	if !IsNil(o.CreateEnvironments) {
		toSerialize["create_environments"] = o.CreateEnvironments
	}
	if !IsNil(o.CreateProjects) {
		toSerialize["create_projects"] = o.CreateProjects
	}
	if !IsNil(o.DryRun) {
		toSerialize["dry_run"] = o.DryRun
	}
	toSerialize["mapped_values"] = o.MappedValues
	toSerialize["mode"] = o.Mode
	toSerialize["region"] = o.Region
	toSerialize["service"] = o.Service
	toSerialize["resource"] = o.Resource.Get()
	return toSerialize, nil
}

type NullableAwsPull struct {
	value *AwsPull
	isSet bool
}

func (v NullableAwsPull) Get() *AwsPull {
	return v.value
}

func (v *NullableAwsPull) Set(val *AwsPull) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPull) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPull(val *AwsPull) *NullableAwsPull {
	return &NullableAwsPull{value: val, isSet: true}
}

func (v NullableAwsPull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


