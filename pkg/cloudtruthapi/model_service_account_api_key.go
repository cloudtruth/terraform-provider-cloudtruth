/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
)

// checks if the ServiceAccountAPIKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountAPIKey{}

// ServiceAccountAPIKey struct for ServiceAccountAPIKey
type ServiceAccountAPIKey struct {
	// A free-form name for the API key. Need not be unique. 50 characters max.
	Name *string `json:"name,omitempty"`
	Prefix string `json:"prefix"`
	// If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)
	Revoked *bool `json:"revoked,omitempty"`
	HasExpired bool `json:"has_expired"`
	Created time.Time `json:"created"`
	// Once API key expires, clients cannot use it anymore.
	ExpiryDate NullableTime `json:"expiry_date,omitempty"`
}

// NewServiceAccountAPIKey instantiates a new ServiceAccountAPIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountAPIKey(prefix string, hasExpired bool, created time.Time) *ServiceAccountAPIKey {
	this := ServiceAccountAPIKey{}
	this.Prefix = prefix
	this.HasExpired = hasExpired
	this.Created = created
	return &this
}

// NewServiceAccountAPIKeyWithDefaults instantiates a new ServiceAccountAPIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountAPIKeyWithDefaults() *ServiceAccountAPIKey {
	this := ServiceAccountAPIKey{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceAccountAPIKey) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountAPIKey) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceAccountAPIKey) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceAccountAPIKey) SetName(v string) {
	o.Name = &v
}

// GetPrefix returns the Prefix field value
func (o *ServiceAccountAPIKey) GetPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountAPIKey) GetPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prefix, true
}

// SetPrefix sets field value
func (o *ServiceAccountAPIKey) SetPrefix(v string) {
	o.Prefix = v
}

// GetRevoked returns the Revoked field value if set, zero value otherwise.
func (o *ServiceAccountAPIKey) GetRevoked() bool {
	if o == nil || IsNil(o.Revoked) {
		var ret bool
		return ret
	}
	return *o.Revoked
}

// GetRevokedOk returns a tuple with the Revoked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountAPIKey) GetRevokedOk() (*bool, bool) {
	if o == nil || IsNil(o.Revoked) {
		return nil, false
	}
	return o.Revoked, true
}

// HasRevoked returns a boolean if a field has been set.
func (o *ServiceAccountAPIKey) HasRevoked() bool {
	if o != nil && !IsNil(o.Revoked) {
		return true
	}

	return false
}

// SetRevoked gets a reference to the given bool and assigns it to the Revoked field.
func (o *ServiceAccountAPIKey) SetRevoked(v bool) {
	o.Revoked = &v
}

// GetHasExpired returns the HasExpired field value
func (o *ServiceAccountAPIKey) GetHasExpired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasExpired
}

// GetHasExpiredOk returns a tuple with the HasExpired field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountAPIKey) GetHasExpiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasExpired, true
}

// SetHasExpired sets field value
func (o *ServiceAccountAPIKey) SetHasExpired(v bool) {
	o.HasExpired = v
}

// GetCreated returns the Created field value
func (o *ServiceAccountAPIKey) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountAPIKey) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ServiceAccountAPIKey) SetCreated(v time.Time) {
	o.Created = v
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAccountAPIKey) GetExpiryDate() time.Time {
	if o == nil || IsNil(o.ExpiryDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryDate.Get()
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccountAPIKey) GetExpiryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryDate.Get(), o.ExpiryDate.IsSet()
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *ServiceAccountAPIKey) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate.IsSet() {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given NullableTime and assigns it to the ExpiryDate field.
func (o *ServiceAccountAPIKey) SetExpiryDate(v time.Time) {
	o.ExpiryDate.Set(&v)
}
// SetExpiryDateNil sets the value for ExpiryDate to be an explicit nil
func (o *ServiceAccountAPIKey) SetExpiryDateNil() {
	o.ExpiryDate.Set(nil)
}

// UnsetExpiryDate ensures that no value is present for ExpiryDate, not even an explicit nil
func (o *ServiceAccountAPIKey) UnsetExpiryDate() {
	o.ExpiryDate.Unset()
}

func (o ServiceAccountAPIKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAccountAPIKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["prefix"] = o.Prefix
	if !IsNil(o.Revoked) {
		toSerialize["revoked"] = o.Revoked
	}
	toSerialize["has_expired"] = o.HasExpired
	toSerialize["created"] = o.Created
	if o.ExpiryDate.IsSet() {
		toSerialize["expiry_date"] = o.ExpiryDate.Get()
	}
	return toSerialize, nil
}

type NullableServiceAccountAPIKey struct {
	value *ServiceAccountAPIKey
	isSet bool
}

func (v NullableServiceAccountAPIKey) Get() *ServiceAccountAPIKey {
	return v.value
}

func (v *NullableServiceAccountAPIKey) Set(val *ServiceAccountAPIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountAPIKey(val *ServiceAccountAPIKey) *NullableServiceAccountAPIKey {
	return &NullableServiceAccountAPIKey{value: val, isSet: true}
}

func (v NullableServiceAccountAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


