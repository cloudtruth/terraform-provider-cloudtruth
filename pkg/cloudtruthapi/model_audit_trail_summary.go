/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AuditTrailSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditTrailSummary{}

// AuditTrailSummary struct for AuditTrailSummary
type AuditTrailSummary struct {
	// The earliest audit record timestamp available.
	Earliest NullableTime `json:"earliest"`
	// The maximum number of days the system will save auditing records, based on your subscription.
	MaxDays int32 `json:"max_days"`
	// The maximum number of auditing records the system will save based on your subscription.
	MaxRecords int32 `json:"max_records"`
	// The total number of audit records available.
	Total int32 `json:"total"`
}

type _AuditTrailSummary AuditTrailSummary

// NewAuditTrailSummary instantiates a new AuditTrailSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditTrailSummary(earliest NullableTime, maxDays int32, maxRecords int32, total int32) *AuditTrailSummary {
	this := AuditTrailSummary{}
	this.Earliest = earliest
	this.MaxDays = maxDays
	this.MaxRecords = maxRecords
	this.Total = total
	return &this
}

// NewAuditTrailSummaryWithDefaults instantiates a new AuditTrailSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditTrailSummaryWithDefaults() *AuditTrailSummary {
	this := AuditTrailSummary{}
	return &this
}

// GetEarliest returns the Earliest field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *AuditTrailSummary) GetEarliest() time.Time {
	if o == nil || o.Earliest.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.Earliest.Get()
}

// GetEarliestOk returns a tuple with the Earliest field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditTrailSummary) GetEarliestOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Earliest.Get(), o.Earliest.IsSet()
}

// SetEarliest sets field value
func (o *AuditTrailSummary) SetEarliest(v time.Time) {
	o.Earliest.Set(&v)
}

// GetMaxDays returns the MaxDays field value
func (o *AuditTrailSummary) GetMaxDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxDays
}

// GetMaxDaysOk returns a tuple with the MaxDays field value
// and a boolean to check if the value has been set.
func (o *AuditTrailSummary) GetMaxDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxDays, true
}

// SetMaxDays sets field value
func (o *AuditTrailSummary) SetMaxDays(v int32) {
	o.MaxDays = v
}

// GetMaxRecords returns the MaxRecords field value
func (o *AuditTrailSummary) GetMaxRecords() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxRecords
}

// GetMaxRecordsOk returns a tuple with the MaxRecords field value
// and a boolean to check if the value has been set.
func (o *AuditTrailSummary) GetMaxRecordsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxRecords, true
}

// SetMaxRecords sets field value
func (o *AuditTrailSummary) SetMaxRecords(v int32) {
	o.MaxRecords = v
}

// GetTotal returns the Total field value
func (o *AuditTrailSummary) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *AuditTrailSummary) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *AuditTrailSummary) SetTotal(v int32) {
	o.Total = v
}

func (o AuditTrailSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditTrailSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["earliest"] = o.Earliest.Get()
	toSerialize["max_days"] = o.MaxDays
	toSerialize["max_records"] = o.MaxRecords
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *AuditTrailSummary) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"earliest",
		"max_days",
		"max_records",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuditTrailSummary := _AuditTrailSummary{}

	err = json.Unmarshal(bytes, &varAuditTrailSummary)

	if err != nil {
		return err
	}

	*o = AuditTrailSummary(varAuditTrailSummary)

	return err
}

type NullableAuditTrailSummary struct {
	value *AuditTrailSummary
	isSet bool
}

func (v NullableAuditTrailSummary) Get() *AuditTrailSummary {
	return v.value
}

func (v *NullableAuditTrailSummary) Set(val *AuditTrailSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditTrailSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditTrailSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditTrailSummary(val *AuditTrailSummary) *NullableAuditTrailSummary {
	return &NullableAuditTrailSummary{value: val, isSet: true}
}

func (v NullableAuditTrailSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditTrailSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


