/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
)

// checks if the PatchedAzureKeyVaultIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedAzureKeyVaultIntegration{}

// PatchedAzureKeyVaultIntegration struct for PatchedAzureKeyVaultIntegration
type PatchedAzureKeyVaultIntegration struct {
	Url *string `json:"url,omitempty"`
	// The unique identifier for the integration.
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	// An optional description for the integration.
	Description *string `json:"description,omitempty"`
	Status *StatusEnum `json:"status,omitempty"`
	// If an error occurs, more details will be available in this field.
	StatusDetail *string `json:"status_detail,omitempty"`
	// The last time the status was evaluated.
	StatusLastCheckedAt NullableTime `json:"status_last_checked_at,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	ModifiedAt NullableTime `json:"modified_at,omitempty"`
	Fqn *string `json:"fqn,omitempty"`
	// The type of integration.
	Type *string `json:"type,omitempty"`
	// Allow actions to write to the integration.
	Writable *bool `json:"writable,omitempty"`
	// The Azure Key Vault name.
	VaultName *string `json:"vault_name,omitempty"`
	// The Azure Tenant ID.
	TenantId *string `json:"tenant_id,omitempty"`
}

// NewPatchedAzureKeyVaultIntegration instantiates a new PatchedAzureKeyVaultIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedAzureKeyVaultIntegration() *PatchedAzureKeyVaultIntegration {
	this := PatchedAzureKeyVaultIntegration{}
	return &this
}

// NewPatchedAzureKeyVaultIntegrationWithDefaults instantiates a new PatchedAzureKeyVaultIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedAzureKeyVaultIntegrationWithDefaults() *PatchedAzureKeyVaultIntegration {
	this := PatchedAzureKeyVaultIntegration{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PatchedAzureKeyVaultIntegration) SetUrl(v string) {
	o.Url = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchedAzureKeyVaultIntegration) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedAzureKeyVaultIntegration) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedAzureKeyVaultIntegration) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetStatus() StatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret StatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetStatusOk() (*StatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StatusEnum and assigns it to the Status field.
func (o *PatchedAzureKeyVaultIntegration) SetStatus(v StatusEnum) {
	o.Status = &v
}

// GetStatusDetail returns the StatusDetail field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetStatusDetail() string {
	if o == nil || IsNil(o.StatusDetail) {
		var ret string
		return ret
	}
	return *o.StatusDetail
}

// GetStatusDetailOk returns a tuple with the StatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetStatusDetailOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDetail) {
		return nil, false
	}
	return o.StatusDetail, true
}

// HasStatusDetail returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasStatusDetail() bool {
	if o != nil && !IsNil(o.StatusDetail) {
		return true
	}

	return false
}

// SetStatusDetail gets a reference to the given string and assigns it to the StatusDetail field.
func (o *PatchedAzureKeyVaultIntegration) SetStatusDetail(v string) {
	o.StatusDetail = &v
}

// GetStatusLastCheckedAt returns the StatusLastCheckedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedAzureKeyVaultIntegration) GetStatusLastCheckedAt() time.Time {
	if o == nil || IsNil(o.StatusLastCheckedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StatusLastCheckedAt.Get()
}

// GetStatusLastCheckedAtOk returns a tuple with the StatusLastCheckedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedAzureKeyVaultIntegration) GetStatusLastCheckedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusLastCheckedAt.Get(), o.StatusLastCheckedAt.IsSet()
}

// HasStatusLastCheckedAt returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasStatusLastCheckedAt() bool {
	if o != nil && o.StatusLastCheckedAt.IsSet() {
		return true
	}

	return false
}

// SetStatusLastCheckedAt gets a reference to the given NullableTime and assigns it to the StatusLastCheckedAt field.
func (o *PatchedAzureKeyVaultIntegration) SetStatusLastCheckedAt(v time.Time) {
	o.StatusLastCheckedAt.Set(&v)
}
// SetStatusLastCheckedAtNil sets the value for StatusLastCheckedAt to be an explicit nil
func (o *PatchedAzureKeyVaultIntegration) SetStatusLastCheckedAtNil() {
	o.StatusLastCheckedAt.Set(nil)
}

// UnsetStatusLastCheckedAt ensures that no value is present for StatusLastCheckedAt, not even an explicit nil
func (o *PatchedAzureKeyVaultIntegration) UnsetStatusLastCheckedAt() {
	o.StatusLastCheckedAt.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PatchedAzureKeyVaultIntegration) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedAzureKeyVaultIntegration) GetModifiedAt() time.Time {
	if o == nil || IsNil(o.ModifiedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedAzureKeyVaultIntegration) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt.IsSet() {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given NullableTime and assigns it to the ModifiedAt field.
func (o *PatchedAzureKeyVaultIntegration) SetModifiedAt(v time.Time) {
	o.ModifiedAt.Set(&v)
}
// SetModifiedAtNil sets the value for ModifiedAt to be an explicit nil
func (o *PatchedAzureKeyVaultIntegration) SetModifiedAtNil() {
	o.ModifiedAt.Set(nil)
}

// UnsetModifiedAt ensures that no value is present for ModifiedAt, not even an explicit nil
func (o *PatchedAzureKeyVaultIntegration) UnsetModifiedAt() {
	o.ModifiedAt.Unset()
}

// GetFqn returns the Fqn field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetFqn() string {
	if o == nil || IsNil(o.Fqn) {
		var ret string
		return ret
	}
	return *o.Fqn
}

// GetFqnOk returns a tuple with the Fqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetFqnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqn) {
		return nil, false
	}
	return o.Fqn, true
}

// HasFqn returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasFqn() bool {
	if o != nil && !IsNil(o.Fqn) {
		return true
	}

	return false
}

// SetFqn gets a reference to the given string and assigns it to the Fqn field.
func (o *PatchedAzureKeyVaultIntegration) SetFqn(v string) {
	o.Fqn = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PatchedAzureKeyVaultIntegration) SetType(v string) {
	o.Type = &v
}

// GetWritable returns the Writable field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetWritable() bool {
	if o == nil || IsNil(o.Writable) {
		var ret bool
		return ret
	}
	return *o.Writable
}

// GetWritableOk returns a tuple with the Writable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetWritableOk() (*bool, bool) {
	if o == nil || IsNil(o.Writable) {
		return nil, false
	}
	return o.Writable, true
}

// HasWritable returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasWritable() bool {
	if o != nil && !IsNil(o.Writable) {
		return true
	}

	return false
}

// SetWritable gets a reference to the given bool and assigns it to the Writable field.
func (o *PatchedAzureKeyVaultIntegration) SetWritable(v bool) {
	o.Writable = &v
}

// GetVaultName returns the VaultName field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetVaultName() string {
	if o == nil || IsNil(o.VaultName) {
		var ret string
		return ret
	}
	return *o.VaultName
}

// GetVaultNameOk returns a tuple with the VaultName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetVaultNameOk() (*string, bool) {
	if o == nil || IsNil(o.VaultName) {
		return nil, false
	}
	return o.VaultName, true
}

// HasVaultName returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasVaultName() bool {
	if o != nil && !IsNil(o.VaultName) {
		return true
	}

	return false
}

// SetVaultName gets a reference to the given string and assigns it to the VaultName field.
func (o *PatchedAzureKeyVaultIntegration) SetVaultName(v string) {
	o.VaultName = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *PatchedAzureKeyVaultIntegration) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedAzureKeyVaultIntegration) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *PatchedAzureKeyVaultIntegration) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *PatchedAzureKeyVaultIntegration) SetTenantId(v string) {
	o.TenantId = &v
}

func (o PatchedAzureKeyVaultIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedAzureKeyVaultIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetail) {
		toSerialize["status_detail"] = o.StatusDetail
	}
	if o.StatusLastCheckedAt.IsSet() {
		toSerialize["status_last_checked_at"] = o.StatusLastCheckedAt.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.ModifiedAt.IsSet() {
		toSerialize["modified_at"] = o.ModifiedAt.Get()
	}
	if !IsNil(o.Fqn) {
		toSerialize["fqn"] = o.Fqn
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Writable) {
		toSerialize["writable"] = o.Writable
	}
	if !IsNil(o.VaultName) {
		toSerialize["vault_name"] = o.VaultName
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	return toSerialize, nil
}

type NullablePatchedAzureKeyVaultIntegration struct {
	value *PatchedAzureKeyVaultIntegration
	isSet bool
}

func (v NullablePatchedAzureKeyVaultIntegration) Get() *PatchedAzureKeyVaultIntegration {
	return v.value
}

func (v *NullablePatchedAzureKeyVaultIntegration) Set(val *PatchedAzureKeyVaultIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedAzureKeyVaultIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedAzureKeyVaultIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedAzureKeyVaultIntegration(val *PatchedAzureKeyVaultIntegration) *NullablePatchedAzureKeyVaultIntegration {
	return &NullablePatchedAzureKeyVaultIntegration{value: val, isSet: true}
}

func (v NullablePatchedAzureKeyVaultIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedAzureKeyVaultIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


