/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ServiceAccountCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAccountCreateRequest{}

// ServiceAccountCreateRequest struct for ServiceAccountCreateRequest
type ServiceAccountCreateRequest struct {
	// The name of the process or system using the service account.
	Name string `json:"name"`
	// An optional description of the process or system using the service account.
	Description *string `json:"description,omitempty"`
	// The role for the service acount
	Role *string `json:"role,omitempty"`
	// The owner of the service account.
	Owner *string `json:"owner,omitempty"`
}

type _ServiceAccountCreateRequest ServiceAccountCreateRequest

// NewServiceAccountCreateRequest instantiates a new ServiceAccountCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccountCreateRequest(name string) *ServiceAccountCreateRequest {
	this := ServiceAccountCreateRequest{}
	this.Name = name
	return &this
}

// NewServiceAccountCreateRequestWithDefaults instantiates a new ServiceAccountCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountCreateRequestWithDefaults() *ServiceAccountCreateRequest {
	this := ServiceAccountCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ServiceAccountCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceAccountCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceAccountCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceAccountCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceAccountCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceAccountCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ServiceAccountCreateRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountCreateRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ServiceAccountCreateRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ServiceAccountCreateRequest) SetRole(v string) {
	o.Role = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ServiceAccountCreateRequest) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAccountCreateRequest) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ServiceAccountCreateRequest) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *ServiceAccountCreateRequest) SetOwner(v string) {
	o.Owner = &v
}

func (o ServiceAccountCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAccountCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

func (o *ServiceAccountCreateRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceAccountCreateRequest := _ServiceAccountCreateRequest{}

	err = json.Unmarshal(bytes, &varServiceAccountCreateRequest)

	if err != nil {
		return err
	}

	*o = ServiceAccountCreateRequest(varServiceAccountCreateRequest)

	return err
}

type NullableServiceAccountCreateRequest struct {
	value *ServiceAccountCreateRequest
	isSet bool
}

func (v NullableServiceAccountCreateRequest) Get() *ServiceAccountCreateRequest {
	return v.value
}

func (v *NullableServiceAccountCreateRequest) Set(val *ServiceAccountCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccountCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccountCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccountCreateRequest(val *ServiceAccountCreateRequest) *NullableServiceAccountCreateRequest {
	return &NullableServiceAccountCreateRequest{value: val, isSet: true}
}

func (v NullableServiceAccountCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccountCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


