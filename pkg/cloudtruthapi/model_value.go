/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
)

// checks if the Value type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Value{}

// Value A value for a parameter in a given environment.
type Value struct {
	// The value url.
	Url string `json:"url"`
	Id string `json:"id"`
	LedgerId string `json:"ledger_id"`
	// The active environment this Value is viewed under
	ActiveEnvironment string `json:"active_environment"`
	// The active environment id this Value is viewed under
	ActiveEnvironmentId string `json:"active_environment_id"`
	// The name of the environment that this environment is viewed under
	ActiveEnvironmentName string `json:"active_environment_name"`
	// The environment this value is set in.
	Environment string `json:"environment"`
	// The environment id for this value.
	EnvironmentId string `json:"environment_id"`
	// The environment name for this value.  This is a convenience to avoid another query against the server to resolve the environment url into a name.
	EnvironmentName string `json:"environment_name"`
	// The parameter this value is for.
	Parameter string `json:"parameter"`
	// The parameter id for this value.
	ParameterId string `json:"parameter_id"`
	External *bool `json:"external,omitempty"`
	ExternalFqn *string `json:"external_fqn,omitempty"`
	ExternalFilter NullableString `json:"external_filter,omitempty"`
	// This field is deprecated and unused.
	ExternalError NullableString `json:"external_error"`
	ExternalStatus NullableValueExternalStatus `json:"external_status"`
	InternalValue NullableString `json:"internal_value,omitempty"`
	Interpolated *bool `json:"interpolated,omitempty"`
	// This is the actual content of the Value for the given parameter in the given environment.  If you request secret masking, no secret content will be included in the result and instead a series of asterisks will be used instead for the value.  Clients applying this value to a shell environment should set `<parameter_name>=<value>` even if `value` is the empty string.  If `value` is `null`, the client should unset that shell environment variable.
	Value NullableString `json:"value"`
	// If true, the `value` field has undergone template evaluation.
	Evaluated bool `json:"evaluated"`
	// Indicates the value content is a secret.  Normally this is `true` when the parameter is a secret. It is possible for a parameter to be a secret with a external value that is not a secret.  It is not possible to convert a parameter from a secret to a non-secret if any of the values are external and a secret.  Clients can check this condition by leveraging this field.  It is also possible for a parameter to not be a secret but for this value to be dynamic and reference a Parameter that is a secret.  In this case, we indicate the value is a secret.
	Secret NullableBool `json:"secret"`
	// The projects this value references, if dynamic.  This field is not valid for history requests.
	ReferencedProjects []string `json:"referenced_projects"`
	// The parameters this value references, if dynamic.  this field is not valid for history requests.
	ReferencedParameters []string `json:"referenced_parameters"`
	// The templates this value references, if dynamic.  This field is not valid for history requests.
	ReferencedTemplates []string `json:"referenced_templates"`
	CreatedAt time.Time `json:"created_at"`
	ModifiedAt NullableTime `json:"modified_at"`
	ExpiresAt NullableTime `json:"expires_at"`
}

// NewValue instantiates a new Value object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValue(url string, id string, ledgerId string, activeEnvironment string, activeEnvironmentId string, activeEnvironmentName string, environment string, environmentId string, environmentName string, parameter string, parameterId string, externalError NullableString, externalStatus NullableValueExternalStatus, value NullableString, evaluated bool, secret NullableBool, referencedProjects []string, referencedParameters []string, referencedTemplates []string, createdAt time.Time, modifiedAt NullableTime, expiresAt NullableTime) *Value {
	this := Value{}
	this.Url = url
	this.Id = id
	this.LedgerId = ledgerId
	this.ActiveEnvironment = activeEnvironment
	this.ActiveEnvironmentId = activeEnvironmentId
	this.ActiveEnvironmentName = activeEnvironmentName
	this.Environment = environment
	this.EnvironmentId = environmentId
	this.EnvironmentName = environmentName
	this.Parameter = parameter
	this.ParameterId = parameterId
	this.ExternalError = externalError
	this.ExternalStatus = externalStatus
	this.Value = value
	this.Evaluated = evaluated
	this.Secret = secret
	this.ReferencedProjects = referencedProjects
	this.ReferencedParameters = referencedParameters
	this.ReferencedTemplates = referencedTemplates
	this.CreatedAt = createdAt
	this.ModifiedAt = modifiedAt
	this.ExpiresAt = expiresAt
	return &this
}

// NewValueWithDefaults instantiates a new Value object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueWithDefaults() *Value {
	this := Value{}
	return &this
}

// GetUrl returns the Url field value
func (o *Value) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Value) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Value) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *Value) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Value) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Value) SetId(v string) {
	o.Id = v
}

// GetLedgerId returns the LedgerId field value
func (o *Value) GetLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value
// and a boolean to check if the value has been set.
func (o *Value) GetLedgerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LedgerId, true
}

// SetLedgerId sets field value
func (o *Value) SetLedgerId(v string) {
	o.LedgerId = v
}

// GetActiveEnvironment returns the ActiveEnvironment field value
func (o *Value) GetActiveEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActiveEnvironment
}

// GetActiveEnvironmentOk returns a tuple with the ActiveEnvironment field value
// and a boolean to check if the value has been set.
func (o *Value) GetActiveEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveEnvironment, true
}

// SetActiveEnvironment sets field value
func (o *Value) SetActiveEnvironment(v string) {
	o.ActiveEnvironment = v
}

// GetActiveEnvironmentId returns the ActiveEnvironmentId field value
func (o *Value) GetActiveEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActiveEnvironmentId
}

// GetActiveEnvironmentIdOk returns a tuple with the ActiveEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *Value) GetActiveEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveEnvironmentId, true
}

// SetActiveEnvironmentId sets field value
func (o *Value) SetActiveEnvironmentId(v string) {
	o.ActiveEnvironmentId = v
}

// GetActiveEnvironmentName returns the ActiveEnvironmentName field value
func (o *Value) GetActiveEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActiveEnvironmentName
}

// GetActiveEnvironmentNameOk returns a tuple with the ActiveEnvironmentName field value
// and a boolean to check if the value has been set.
func (o *Value) GetActiveEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveEnvironmentName, true
}

// SetActiveEnvironmentName sets field value
func (o *Value) SetActiveEnvironmentName(v string) {
	o.ActiveEnvironmentName = v
}

// GetEnvironment returns the Environment field value
func (o *Value) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *Value) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *Value) SetEnvironment(v string) {
	o.Environment = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *Value) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *Value) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *Value) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEnvironmentName returns the EnvironmentName field value
func (o *Value) GetEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value
// and a boolean to check if the value has been set.
func (o *Value) GetEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentName, true
}

// SetEnvironmentName sets field value
func (o *Value) SetEnvironmentName(v string) {
	o.EnvironmentName = v
}

// GetParameter returns the Parameter field value
func (o *Value) GetParameter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Parameter
}

// GetParameterOk returns a tuple with the Parameter field value
// and a boolean to check if the value has been set.
func (o *Value) GetParameterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parameter, true
}

// SetParameter sets field value
func (o *Value) SetParameter(v string) {
	o.Parameter = v
}

// GetParameterId returns the ParameterId field value
func (o *Value) GetParameterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParameterId
}

// GetParameterIdOk returns a tuple with the ParameterId field value
// and a boolean to check if the value has been set.
func (o *Value) GetParameterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParameterId, true
}

// SetParameterId sets field value
func (o *Value) SetParameterId(v string) {
	o.ParameterId = v
}

// GetExternal returns the External field value if set, zero value otherwise.
func (o *Value) GetExternal() bool {
	if o == nil || IsNil(o.External) {
		var ret bool
		return ret
	}
	return *o.External
}

// GetExternalOk returns a tuple with the External field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Value) GetExternalOk() (*bool, bool) {
	if o == nil || IsNil(o.External) {
		return nil, false
	}
	return o.External, true
}

// HasExternal returns a boolean if a field has been set.
func (o *Value) HasExternal() bool {
	if o != nil && !IsNil(o.External) {
		return true
	}

	return false
}

// SetExternal gets a reference to the given bool and assigns it to the External field.
func (o *Value) SetExternal(v bool) {
	o.External = &v
}

// GetExternalFqn returns the ExternalFqn field value if set, zero value otherwise.
func (o *Value) GetExternalFqn() string {
	if o == nil || IsNil(o.ExternalFqn) {
		var ret string
		return ret
	}
	return *o.ExternalFqn
}

// GetExternalFqnOk returns a tuple with the ExternalFqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Value) GetExternalFqnOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalFqn) {
		return nil, false
	}
	return o.ExternalFqn, true
}

// HasExternalFqn returns a boolean if a field has been set.
func (o *Value) HasExternalFqn() bool {
	if o != nil && !IsNil(o.ExternalFqn) {
		return true
	}

	return false
}

// SetExternalFqn gets a reference to the given string and assigns it to the ExternalFqn field.
func (o *Value) SetExternalFqn(v string) {
	o.ExternalFqn = &v
}

// GetExternalFilter returns the ExternalFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Value) GetExternalFilter() string {
	if o == nil || IsNil(o.ExternalFilter.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalFilter.Get()
}

// GetExternalFilterOk returns a tuple with the ExternalFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetExternalFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalFilter.Get(), o.ExternalFilter.IsSet()
}

// HasExternalFilter returns a boolean if a field has been set.
func (o *Value) HasExternalFilter() bool {
	if o != nil && o.ExternalFilter.IsSet() {
		return true
	}

	return false
}

// SetExternalFilter gets a reference to the given NullableString and assigns it to the ExternalFilter field.
func (o *Value) SetExternalFilter(v string) {
	o.ExternalFilter.Set(&v)
}
// SetExternalFilterNil sets the value for ExternalFilter to be an explicit nil
func (o *Value) SetExternalFilterNil() {
	o.ExternalFilter.Set(nil)
}

// UnsetExternalFilter ensures that no value is present for ExternalFilter, not even an explicit nil
func (o *Value) UnsetExternalFilter() {
	o.ExternalFilter.Unset()
}

// GetExternalError returns the ExternalError field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Value) GetExternalError() string {
	if o == nil || o.ExternalError.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalError.Get()
}

// GetExternalErrorOk returns a tuple with the ExternalError field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetExternalErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalError.Get(), o.ExternalError.IsSet()
}

// SetExternalError sets field value
func (o *Value) SetExternalError(v string) {
	o.ExternalError.Set(&v)
}

// GetExternalStatus returns the ExternalStatus field value
// If the value is explicit nil, the zero value for ValueExternalStatus will be returned
func (o *Value) GetExternalStatus() ValueExternalStatus {
	if o == nil || o.ExternalStatus.Get() == nil {
		var ret ValueExternalStatus
		return ret
	}

	return *o.ExternalStatus.Get()
}

// GetExternalStatusOk returns a tuple with the ExternalStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetExternalStatusOk() (*ValueExternalStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalStatus.Get(), o.ExternalStatus.IsSet()
}

// SetExternalStatus sets field value
func (o *Value) SetExternalStatus(v ValueExternalStatus) {
	o.ExternalStatus.Set(&v)
}

// GetInternalValue returns the InternalValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Value) GetInternalValue() string {
	if o == nil || IsNil(o.InternalValue.Get()) {
		var ret string
		return ret
	}
	return *o.InternalValue.Get()
}

// GetInternalValueOk returns a tuple with the InternalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetInternalValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalValue.Get(), o.InternalValue.IsSet()
}

// HasInternalValue returns a boolean if a field has been set.
func (o *Value) HasInternalValue() bool {
	if o != nil && o.InternalValue.IsSet() {
		return true
	}

	return false
}

// SetInternalValue gets a reference to the given NullableString and assigns it to the InternalValue field.
func (o *Value) SetInternalValue(v string) {
	o.InternalValue.Set(&v)
}
// SetInternalValueNil sets the value for InternalValue to be an explicit nil
func (o *Value) SetInternalValueNil() {
	o.InternalValue.Set(nil)
}

// UnsetInternalValue ensures that no value is present for InternalValue, not even an explicit nil
func (o *Value) UnsetInternalValue() {
	o.InternalValue.Unset()
}

// GetInterpolated returns the Interpolated field value if set, zero value otherwise.
func (o *Value) GetInterpolated() bool {
	if o == nil || IsNil(o.Interpolated) {
		var ret bool
		return ret
	}
	return *o.Interpolated
}

// GetInterpolatedOk returns a tuple with the Interpolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Value) GetInterpolatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Interpolated) {
		return nil, false
	}
	return o.Interpolated, true
}

// HasInterpolated returns a boolean if a field has been set.
func (o *Value) HasInterpolated() bool {
	if o != nil && !IsNil(o.Interpolated) {
		return true
	}

	return false
}

// SetInterpolated gets a reference to the given bool and assigns it to the Interpolated field.
func (o *Value) SetInterpolated(v bool) {
	o.Interpolated = &v
}

// GetValue returns the Value field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Value) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}

	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// SetValue sets field value
func (o *Value) SetValue(v string) {
	o.Value.Set(&v)
}

// GetEvaluated returns the Evaluated field value
func (o *Value) GetEvaluated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Evaluated
}

// GetEvaluatedOk returns a tuple with the Evaluated field value
// and a boolean to check if the value has been set.
func (o *Value) GetEvaluatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Evaluated, true
}

// SetEvaluated sets field value
func (o *Value) SetEvaluated(v bool) {
	o.Evaluated = v
}

// GetSecret returns the Secret field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *Value) GetSecret() bool {
	if o == nil || o.Secret.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Secret.Get()
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetSecretOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Secret.Get(), o.Secret.IsSet()
}

// SetSecret sets field value
func (o *Value) SetSecret(v bool) {
	o.Secret.Set(&v)
}

// GetReferencedProjects returns the ReferencedProjects field value
func (o *Value) GetReferencedProjects() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ReferencedProjects
}

// GetReferencedProjectsOk returns a tuple with the ReferencedProjects field value
// and a boolean to check if the value has been set.
func (o *Value) GetReferencedProjectsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferencedProjects, true
}

// SetReferencedProjects sets field value
func (o *Value) SetReferencedProjects(v []string) {
	o.ReferencedProjects = v
}

// GetReferencedParameters returns the ReferencedParameters field value
func (o *Value) GetReferencedParameters() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ReferencedParameters
}

// GetReferencedParametersOk returns a tuple with the ReferencedParameters field value
// and a boolean to check if the value has been set.
func (o *Value) GetReferencedParametersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferencedParameters, true
}

// SetReferencedParameters sets field value
func (o *Value) SetReferencedParameters(v []string) {
	o.ReferencedParameters = v
}

// GetReferencedTemplates returns the ReferencedTemplates field value
func (o *Value) GetReferencedTemplates() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ReferencedTemplates
}

// GetReferencedTemplatesOk returns a tuple with the ReferencedTemplates field value
// and a boolean to check if the value has been set.
func (o *Value) GetReferencedTemplatesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferencedTemplates, true
}

// SetReferencedTemplates sets field value
func (o *Value) SetReferencedTemplates(v []string) {
	o.ReferencedTemplates = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Value) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Value) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Value) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns the ModifiedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Value) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// SetModifiedAt sets field value
func (o *Value) SetModifiedAt(v time.Time) {
	o.ModifiedAt.Set(&v)
}

// GetExpiresAt returns the ExpiresAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Value) GetExpiresAt() time.Time {
	if o == nil || o.ExpiresAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Value) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// SetExpiresAt sets field value
func (o *Value) SetExpiresAt(v time.Time) {
	o.ExpiresAt.Set(&v)
}

func (o Value) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Value) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["id"] = o.Id
	toSerialize["ledger_id"] = o.LedgerId
	toSerialize["active_environment"] = o.ActiveEnvironment
	toSerialize["active_environment_id"] = o.ActiveEnvironmentId
	toSerialize["active_environment_name"] = o.ActiveEnvironmentName
	toSerialize["environment"] = o.Environment
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["environment_name"] = o.EnvironmentName
	toSerialize["parameter"] = o.Parameter
	toSerialize["parameter_id"] = o.ParameterId
	if !IsNil(o.External) {
		toSerialize["external"] = o.External
	}
	if !IsNil(o.ExternalFqn) {
		toSerialize["external_fqn"] = o.ExternalFqn
	}
	if o.ExternalFilter.IsSet() {
		toSerialize["external_filter"] = o.ExternalFilter.Get()
	}
	toSerialize["external_error"] = o.ExternalError.Get()
	toSerialize["external_status"] = o.ExternalStatus.Get()
	if o.InternalValue.IsSet() {
		toSerialize["internal_value"] = o.InternalValue.Get()
	}
	if !IsNil(o.Interpolated) {
		toSerialize["interpolated"] = o.Interpolated
	}
	toSerialize["value"] = o.Value.Get()
	toSerialize["evaluated"] = o.Evaluated
	toSerialize["secret"] = o.Secret.Get()
	toSerialize["referenced_projects"] = o.ReferencedProjects
	toSerialize["referenced_parameters"] = o.ReferencedParameters
	toSerialize["referenced_templates"] = o.ReferencedTemplates
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["modified_at"] = o.ModifiedAt.Get()
	toSerialize["expires_at"] = o.ExpiresAt.Get()
	return toSerialize, nil
}

type NullableValue struct {
	value *Value
	isSet bool
}

func (v NullableValue) Get() *Value {
	return v.value
}

func (v *NullableValue) Set(val *Value) {
	v.value = val
	v.isSet = true
}

func (v NullableValue) IsSet() bool {
	return v.isSet
}

func (v *NullableValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValue(val *Value) *NullableValue {
	return &NullableValue{value: val, isSet: true}
}

func (v NullableValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


