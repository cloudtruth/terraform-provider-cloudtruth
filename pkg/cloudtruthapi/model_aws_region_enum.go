/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"fmt"
)

// AwsRegionEnum the model 'AwsRegionEnum'
type AwsRegionEnum string

// List of AwsRegionEnum
const (
	AWSREGIONENUM_AF_SOUTH_1 AwsRegionEnum = "af-south-1"
	AWSREGIONENUM_AP_EAST_1 AwsRegionEnum = "ap-east-1"
	AWSREGIONENUM_AP_NORTHEAST_1 AwsRegionEnum = "ap-northeast-1"
	AWSREGIONENUM_AP_NORTHEAST_2 AwsRegionEnum = "ap-northeast-2"
	AWSREGIONENUM_AP_NORTHEAST_3 AwsRegionEnum = "ap-northeast-3"
	AWSREGIONENUM_AP_SOUTH_1 AwsRegionEnum = "ap-south-1"
	AWSREGIONENUM_AP_SOUTHEAST_1 AwsRegionEnum = "ap-southeast-1"
	AWSREGIONENUM_AP_SOUTHEAST_2 AwsRegionEnum = "ap-southeast-2"
	AWSREGIONENUM_CA_CENTRAL_1 AwsRegionEnum = "ca-central-1"
	AWSREGIONENUM_CN_NORTH_1 AwsRegionEnum = "cn-north-1"
	AWSREGIONENUM_CN_NORTHWEST_1 AwsRegionEnum = "cn-northwest-1"
	AWSREGIONENUM_EU_CENTRAL_1 AwsRegionEnum = "eu-central-1"
	AWSREGIONENUM_EU_NORTH_1 AwsRegionEnum = "eu-north-1"
	AWSREGIONENUM_EU_SOUTH_1 AwsRegionEnum = "eu-south-1"
	AWSREGIONENUM_EU_WEST_1 AwsRegionEnum = "eu-west-1"
	AWSREGIONENUM_EU_WEST_2 AwsRegionEnum = "eu-west-2"
	AWSREGIONENUM_EU_WEST_3 AwsRegionEnum = "eu-west-3"
	AWSREGIONENUM_ME_SOUTH_1 AwsRegionEnum = "me-south-1"
	AWSREGIONENUM_SA_EAST_1 AwsRegionEnum = "sa-east-1"
	AWSREGIONENUM_US_EAST_1 AwsRegionEnum = "us-east-1"
	AWSREGIONENUM_US_EAST_2 AwsRegionEnum = "us-east-2"
	AWSREGIONENUM_US_WEST_1 AwsRegionEnum = "us-west-1"
	AWSREGIONENUM_US_WEST_2 AwsRegionEnum = "us-west-2"
)

// All allowed values of AwsRegionEnum enum
var AllowedAwsRegionEnumEnumValues = []AwsRegionEnum{
	"af-south-1",
	"ap-east-1",
	"ap-northeast-1",
	"ap-northeast-2",
	"ap-northeast-3",
	"ap-south-1",
	"ap-southeast-1",
	"ap-southeast-2",
	"ca-central-1",
	"cn-north-1",
	"cn-northwest-1",
	"eu-central-1",
	"eu-north-1",
	"eu-south-1",
	"eu-west-1",
	"eu-west-2",
	"eu-west-3",
	"me-south-1",
	"sa-east-1",
	"us-east-1",
	"us-east-2",
	"us-west-1",
	"us-west-2",
}

func (v *AwsRegionEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsRegionEnum(value)
	for _, existing := range AllowedAwsRegionEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsRegionEnum", value)
}

// NewAwsRegionEnumFromValue returns a pointer to a valid AwsRegionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsRegionEnumFromValue(v string) (*AwsRegionEnum, error) {
	ev := AwsRegionEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsRegionEnum: valid values are %v", v, AllowedAwsRegionEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsRegionEnum) IsValid() bool {
	for _, existing := range AllowedAwsRegionEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsRegionEnum value
func (v AwsRegionEnum) Ptr() *AwsRegionEnum {
	return &v
}

type NullableAwsRegionEnum struct {
	value *AwsRegionEnum
	isSet bool
}

func (v NullableAwsRegionEnum) Get() *AwsRegionEnum {
	return v.value
}

func (v *NullableAwsRegionEnum) Set(val *AwsRegionEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsRegionEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsRegionEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsRegionEnum(val *AwsRegionEnum) *NullableAwsRegionEnum {
	return &NullableAwsRegionEnum{value: val, isSet: true}
}

func (v NullableAwsRegionEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsRegionEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

