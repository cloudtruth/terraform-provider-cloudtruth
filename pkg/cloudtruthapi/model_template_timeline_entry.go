/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
)

// checks if the TemplateTimelineEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateTimelineEntry{}

// TemplateTimelineEntry Details about a single change.
type TemplateTimelineEntry struct {
	HistoryDate time.Time `json:"history_date"`
	HistoryType HistoryTypeEnum `json:"history_type"`
	// The unique identifier of a user.
	HistoryUser NullableString `json:"history_user,omitempty"`
	HistoryTemplate TemplateTimelineEntryHistoryTemplate `json:"history_template"`
}

// NewTemplateTimelineEntry instantiates a new TemplateTimelineEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateTimelineEntry(historyDate time.Time, historyType HistoryTypeEnum, historyTemplate TemplateTimelineEntryHistoryTemplate) *TemplateTimelineEntry {
	this := TemplateTimelineEntry{}
	this.HistoryDate = historyDate
	this.HistoryType = historyType
	this.HistoryTemplate = historyTemplate
	return &this
}

// NewTemplateTimelineEntryWithDefaults instantiates a new TemplateTimelineEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateTimelineEntryWithDefaults() *TemplateTimelineEntry {
	this := TemplateTimelineEntry{}
	return &this
}

// GetHistoryDate returns the HistoryDate field value
func (o *TemplateTimelineEntry) GetHistoryDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.HistoryDate
}

// GetHistoryDateOk returns a tuple with the HistoryDate field value
// and a boolean to check if the value has been set.
func (o *TemplateTimelineEntry) GetHistoryDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryDate, true
}

// SetHistoryDate sets field value
func (o *TemplateTimelineEntry) SetHistoryDate(v time.Time) {
	o.HistoryDate = v
}

// GetHistoryType returns the HistoryType field value
func (o *TemplateTimelineEntry) GetHistoryType() HistoryTypeEnum {
	if o == nil {
		var ret HistoryTypeEnum
		return ret
	}

	return o.HistoryType
}

// GetHistoryTypeOk returns a tuple with the HistoryType field value
// and a boolean to check if the value has been set.
func (o *TemplateTimelineEntry) GetHistoryTypeOk() (*HistoryTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryType, true
}

// SetHistoryType sets field value
func (o *TemplateTimelineEntry) SetHistoryType(v HistoryTypeEnum) {
	o.HistoryType = v
}

// GetHistoryUser returns the HistoryUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateTimelineEntry) GetHistoryUser() string {
	if o == nil || IsNil(o.HistoryUser.Get()) {
		var ret string
		return ret
	}
	return *o.HistoryUser.Get()
}

// GetHistoryUserOk returns a tuple with the HistoryUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateTimelineEntry) GetHistoryUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HistoryUser.Get(), o.HistoryUser.IsSet()
}

// HasHistoryUser returns a boolean if a field has been set.
func (o *TemplateTimelineEntry) HasHistoryUser() bool {
	if o != nil && o.HistoryUser.IsSet() {
		return true
	}

	return false
}

// SetHistoryUser gets a reference to the given NullableString and assigns it to the HistoryUser field.
func (o *TemplateTimelineEntry) SetHistoryUser(v string) {
	o.HistoryUser.Set(&v)
}
// SetHistoryUserNil sets the value for HistoryUser to be an explicit nil
func (o *TemplateTimelineEntry) SetHistoryUserNil() {
	o.HistoryUser.Set(nil)
}

// UnsetHistoryUser ensures that no value is present for HistoryUser, not even an explicit nil
func (o *TemplateTimelineEntry) UnsetHistoryUser() {
	o.HistoryUser.Unset()
}

// GetHistoryTemplate returns the HistoryTemplate field value
func (o *TemplateTimelineEntry) GetHistoryTemplate() TemplateTimelineEntryHistoryTemplate {
	if o == nil {
		var ret TemplateTimelineEntryHistoryTemplate
		return ret
	}

	return o.HistoryTemplate
}

// GetHistoryTemplateOk returns a tuple with the HistoryTemplate field value
// and a boolean to check if the value has been set.
func (o *TemplateTimelineEntry) GetHistoryTemplateOk() (*TemplateTimelineEntryHistoryTemplate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryTemplate, true
}

// SetHistoryTemplate sets field value
func (o *TemplateTimelineEntry) SetHistoryTemplate(v TemplateTimelineEntryHistoryTemplate) {
	o.HistoryTemplate = v
}

func (o TemplateTimelineEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateTimelineEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["history_date"] = o.HistoryDate
	toSerialize["history_type"] = o.HistoryType
	if o.HistoryUser.IsSet() {
		toSerialize["history_user"] = o.HistoryUser.Get()
	}
	toSerialize["history_template"] = o.HistoryTemplate
	return toSerialize, nil
}

type NullableTemplateTimelineEntry struct {
	value *TemplateTimelineEntry
	isSet bool
}

func (v NullableTemplateTimelineEntry) Get() *TemplateTimelineEntry {
	return v.value
}

func (v *NullableTemplateTimelineEntry) Set(val *TemplateTimelineEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateTimelineEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateTimelineEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateTimelineEntry(val *TemplateTimelineEntry) *NullableTemplateTimelineEntry {
	return &NullableTemplateTimelineEntry{value: val, isSet: true}
}

func (v NullableTemplateTimelineEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateTimelineEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


