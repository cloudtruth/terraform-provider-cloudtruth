/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
)

// BackupParameterValueExternal struct for BackupParameterValueExternal
type BackupParameterValueExternal struct {
	Fqn      string         `json:"fqn"`
	JmesPath NullableString `json:"jmes_path,omitempty"`
}

// NewBackupParameterValueExternal instantiates a new BackupParameterValueExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupParameterValueExternal(fqn string) *BackupParameterValueExternal {
	this := BackupParameterValueExternal{}
	this.Fqn = fqn
	return &this
}

// NewBackupParameterValueExternalWithDefaults instantiates a new BackupParameterValueExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupParameterValueExternalWithDefaults() *BackupParameterValueExternal {
	this := BackupParameterValueExternal{}
	return &this
}

// GetFqn returns the Fqn field value
func (o *BackupParameterValueExternal) GetFqn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fqn
}

// GetFqnOk returns a tuple with the Fqn field value
// and a boolean to check if the value has been set.
func (o *BackupParameterValueExternal) GetFqnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fqn, true
}

// SetFqn sets field value
func (o *BackupParameterValueExternal) SetFqn(v string) {
	o.Fqn = v
}

// GetJmesPath returns the JmesPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupParameterValueExternal) GetJmesPath() string {
	if o == nil || o.JmesPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.JmesPath.Get()
}

// GetJmesPathOk returns a tuple with the JmesPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupParameterValueExternal) GetJmesPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JmesPath.Get(), o.JmesPath.IsSet()
}

// HasJmesPath returns a boolean if a field has been set.
func (o *BackupParameterValueExternal) HasJmesPath() bool {
	if o != nil && o.JmesPath.IsSet() {
		return true
	}

	return false
}

// SetJmesPath gets a reference to the given NullableString and assigns it to the JmesPath field.
func (o *BackupParameterValueExternal) SetJmesPath(v string) {
	o.JmesPath.Set(&v)
}

// SetJmesPathNil sets the value for JmesPath to be an explicit nil
func (o *BackupParameterValueExternal) SetJmesPathNil() {
	o.JmesPath.Set(nil)
}

// UnsetJmesPath ensures that no value is present for JmesPath, not even an explicit nil
func (o *BackupParameterValueExternal) UnsetJmesPath() {
	o.JmesPath.Unset()
}

func (o BackupParameterValueExternal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fqn"] = o.Fqn
	}
	if o.JmesPath.IsSet() {
		toSerialize["jmes_path"] = o.JmesPath.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBackupParameterValueExternal struct {
	value *BackupParameterValueExternal
	isSet bool
}

func (v NullableBackupParameterValueExternal) Get() *BackupParameterValueExternal {
	return v.value
}

func (v *NullableBackupParameterValueExternal) Set(val *BackupParameterValueExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupParameterValueExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupParameterValueExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupParameterValueExternal(val *BackupParameterValueExternal) *NullableBackupParameterValueExternal {
	return &NullableBackupParameterValueExternal{value: val, isSet: true}
}

func (v NullableBackupParameterValueExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupParameterValueExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
