/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ParameterTimelineEntryHistoryParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterTimelineEntryHistoryParameter{}

// ParameterTimelineEntryHistoryParameter The affected parameter.
type ParameterTimelineEntryHistoryParameter struct {
	// A unique identifier for the parameter.
	ParameterId NullableString `json:"parameter_id"`
	// The parameter name.
	Name string `json:"name"`
}

type _ParameterTimelineEntryHistoryParameter ParameterTimelineEntryHistoryParameter

// NewParameterTimelineEntryHistoryParameter instantiates a new ParameterTimelineEntryHistoryParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterTimelineEntryHistoryParameter(parameterId NullableString, name string) *ParameterTimelineEntryHistoryParameter {
	this := ParameterTimelineEntryHistoryParameter{}
	this.ParameterId = parameterId
	this.Name = name
	return &this
}

// NewParameterTimelineEntryHistoryParameterWithDefaults instantiates a new ParameterTimelineEntryHistoryParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterTimelineEntryHistoryParameterWithDefaults() *ParameterTimelineEntryHistoryParameter {
	this := ParameterTimelineEntryHistoryParameter{}
	return &this
}

// GetParameterId returns the ParameterId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ParameterTimelineEntryHistoryParameter) GetParameterId() string {
	if o == nil || o.ParameterId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ParameterId.Get()
}

// GetParameterIdOk returns a tuple with the ParameterId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ParameterTimelineEntryHistoryParameter) GetParameterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParameterId.Get(), o.ParameterId.IsSet()
}

// SetParameterId sets field value
func (o *ParameterTimelineEntryHistoryParameter) SetParameterId(v string) {
	o.ParameterId.Set(&v)
}

// GetName returns the Name field value
func (o *ParameterTimelineEntryHistoryParameter) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ParameterTimelineEntryHistoryParameter) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ParameterTimelineEntryHistoryParameter) SetName(v string) {
	o.Name = v
}

func (o ParameterTimelineEntryHistoryParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterTimelineEntryHistoryParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parameter_id"] = o.ParameterId.Get()
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *ParameterTimelineEntryHistoryParameter) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"parameter_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParameterTimelineEntryHistoryParameter := _ParameterTimelineEntryHistoryParameter{}

	err = json.Unmarshal(bytes, &varParameterTimelineEntryHistoryParameter)

	if err != nil {
		return err
	}

	*o = ParameterTimelineEntryHistoryParameter(varParameterTimelineEntryHistoryParameter)

	return err
}

type NullableParameterTimelineEntryHistoryParameter struct {
	value *ParameterTimelineEntryHistoryParameter
	isSet bool
}

func (v NullableParameterTimelineEntryHistoryParameter) Get() *ParameterTimelineEntryHistoryParameter {
	return v.value
}

func (v *NullableParameterTimelineEntryHistoryParameter) Set(val *ParameterTimelineEntryHistoryParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterTimelineEntryHistoryParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterTimelineEntryHistoryParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterTimelineEntryHistoryParameter(val *ParameterTimelineEntryHistoryParameter) *NullableParameterTimelineEntryHistoryParameter {
	return &NullableParameterTimelineEntryHistoryParameter{value: val, isSet: true}
}

func (v NullableParameterTimelineEntryHistoryParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterTimelineEntryHistoryParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


