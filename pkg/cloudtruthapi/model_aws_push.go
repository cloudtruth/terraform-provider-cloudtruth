/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudtruthapi

import (
	"encoding/json"
	"time"
)

// checks if the AwsPush type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsPush{}

// AwsPush Push actions can be configured to send configuration and secrets to integrations when tags are updated.
type AwsPush struct {
	Url string `json:"url"`
	// Unique identifier for the action.
	Id string `json:"id"`
	// The action name.
	Name string `json:"name"`
	// The optional description for the action.
	Description *string `json:"description,omitempty"`
	LatestTask NullableAwsPushLatestTask `json:"latest_task"`
	CreatedAt time.Time `json:"created_at"`
	ModifiedAt NullableTime `json:"modified_at"`
	// This setting allows parameters (non-secrets) to be pushed to a destination that only supports storing secrets.  This may increase your overall cost from the cloud provider as some cloud providers charge a premium for secrets-only storage.
	CoerceParameters *bool `json:"coerce_parameters,omitempty"`
	// Include parameters (non-secrets) in the values being pushed.  This setting requires the destination to support parameters or for the `coerce_parameters` flag to be enabled, otherwise the push will fail.
	IncludeParameters *bool `json:"include_parameters,omitempty"`
	// Include secrets in the values being pushed.  This setting requires the destination to support secrets, otherwise the push will fail.
	IncludeSecrets *bool `json:"include_secrets,omitempty"`
	// Include templates in the values being pushed.
	IncludeTemplates *bool `json:"include_templates,omitempty"`
	// When set to dry-run mode an action will report the changes that it would have made in task steps, however those changes are not actually performed.
	DryRun *bool `json:"dry_run,omitempty"`
	// Normally, push will check to see if it originated the values in the destination before making changes to them.  Forcing a push disables the ownership check.
	Force *bool `json:"force,omitempty"`
	// Normally, push will process all parameters including those that flow in from project dependencies.  Declaring a push as `local` will cause it to only process the parameters defined in the selected projects.
	Local *bool `json:"local,omitempty"`
	// Projects that are included in the push.
	Projects []string `json:"projects"`
	// Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push.
	Tags []string `json:"tags"`
	Region AwsRegionEnum `json:"region"`
	Service AwsServiceEnum `json:"service"`
	// Defines a path through the integration to the location where values will be pushed.  The following mustache-style substitutions can be used in the string:    - ``{{ environment }}`` to insert the environment name   - ``{{ parameter }}`` to insert the parameter name   - ``{{ project }}`` to insert the project name   - ``{{ push }}`` to insert the push name   - ``{{ tag }}`` to insert the tag name  We recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.  If you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.
	Resource NullableString `json:"resource"`
}

// NewAwsPush instantiates a new AwsPush object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPush(url string, id string, name string, latestTask NullableAwsPushLatestTask, createdAt time.Time, modifiedAt NullableTime, projects []string, tags []string, region AwsRegionEnum, service AwsServiceEnum, resource NullableString) *AwsPush {
	this := AwsPush{}
	this.Url = url
	this.Id = id
	this.Name = name
	this.LatestTask = latestTask
	this.CreatedAt = createdAt
	this.ModifiedAt = modifiedAt
	this.Projects = projects
	this.Tags = tags
	this.Region = region
	this.Service = service
	this.Resource = resource
	return &this
}

// NewAwsPushWithDefaults instantiates a new AwsPush object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPushWithDefaults() *AwsPush {
	this := AwsPush{}
	return &this
}

// GetUrl returns the Url field value
func (o *AwsPush) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AwsPush) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *AwsPush) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AwsPush) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AwsPush) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AwsPush) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsPush) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsPush) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AwsPush) SetDescription(v string) {
	o.Description = &v
}

// GetLatestTask returns the LatestTask field value
// If the value is explicit nil, the zero value for AwsPushLatestTask will be returned
func (o *AwsPush) GetLatestTask() AwsPushLatestTask {
	if o == nil || o.LatestTask.Get() == nil {
		var ret AwsPushLatestTask
		return ret
	}

	return *o.LatestTask.Get()
}

// GetLatestTaskOk returns a tuple with the LatestTask field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsPush) GetLatestTaskOk() (*AwsPushLatestTask, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestTask.Get(), o.LatestTask.IsSet()
}

// SetLatestTask sets field value
func (o *AwsPush) SetLatestTask(v AwsPushLatestTask) {
	o.LatestTask.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *AwsPush) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AwsPush) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns the ModifiedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *AwsPush) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ModifiedAt.Get()
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsPush) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedAt.Get(), o.ModifiedAt.IsSet()
}

// SetModifiedAt sets field value
func (o *AwsPush) SetModifiedAt(v time.Time) {
	o.ModifiedAt.Set(&v)
}

// GetCoerceParameters returns the CoerceParameters field value if set, zero value otherwise.
func (o *AwsPush) GetCoerceParameters() bool {
	if o == nil || IsNil(o.CoerceParameters) {
		var ret bool
		return ret
	}
	return *o.CoerceParameters
}

// GetCoerceParametersOk returns a tuple with the CoerceParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetCoerceParametersOk() (*bool, bool) {
	if o == nil || IsNil(o.CoerceParameters) {
		return nil, false
	}
	return o.CoerceParameters, true
}

// HasCoerceParameters returns a boolean if a field has been set.
func (o *AwsPush) HasCoerceParameters() bool {
	if o != nil && !IsNil(o.CoerceParameters) {
		return true
	}

	return false
}

// SetCoerceParameters gets a reference to the given bool and assigns it to the CoerceParameters field.
func (o *AwsPush) SetCoerceParameters(v bool) {
	o.CoerceParameters = &v
}

// GetIncludeParameters returns the IncludeParameters field value if set, zero value otherwise.
func (o *AwsPush) GetIncludeParameters() bool {
	if o == nil || IsNil(o.IncludeParameters) {
		var ret bool
		return ret
	}
	return *o.IncludeParameters
}

// GetIncludeParametersOk returns a tuple with the IncludeParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetIncludeParametersOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeParameters) {
		return nil, false
	}
	return o.IncludeParameters, true
}

// HasIncludeParameters returns a boolean if a field has been set.
func (o *AwsPush) HasIncludeParameters() bool {
	if o != nil && !IsNil(o.IncludeParameters) {
		return true
	}

	return false
}

// SetIncludeParameters gets a reference to the given bool and assigns it to the IncludeParameters field.
func (o *AwsPush) SetIncludeParameters(v bool) {
	o.IncludeParameters = &v
}

// GetIncludeSecrets returns the IncludeSecrets field value if set, zero value otherwise.
func (o *AwsPush) GetIncludeSecrets() bool {
	if o == nil || IsNil(o.IncludeSecrets) {
		var ret bool
		return ret
	}
	return *o.IncludeSecrets
}

// GetIncludeSecretsOk returns a tuple with the IncludeSecrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetIncludeSecretsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeSecrets) {
		return nil, false
	}
	return o.IncludeSecrets, true
}

// HasIncludeSecrets returns a boolean if a field has been set.
func (o *AwsPush) HasIncludeSecrets() bool {
	if o != nil && !IsNil(o.IncludeSecrets) {
		return true
	}

	return false
}

// SetIncludeSecrets gets a reference to the given bool and assigns it to the IncludeSecrets field.
func (o *AwsPush) SetIncludeSecrets(v bool) {
	o.IncludeSecrets = &v
}

// GetIncludeTemplates returns the IncludeTemplates field value if set, zero value otherwise.
func (o *AwsPush) GetIncludeTemplates() bool {
	if o == nil || IsNil(o.IncludeTemplates) {
		var ret bool
		return ret
	}
	return *o.IncludeTemplates
}

// GetIncludeTemplatesOk returns a tuple with the IncludeTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetIncludeTemplatesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeTemplates) {
		return nil, false
	}
	return o.IncludeTemplates, true
}

// HasIncludeTemplates returns a boolean if a field has been set.
func (o *AwsPush) HasIncludeTemplates() bool {
	if o != nil && !IsNil(o.IncludeTemplates) {
		return true
	}

	return false
}

// SetIncludeTemplates gets a reference to the given bool and assigns it to the IncludeTemplates field.
func (o *AwsPush) SetIncludeTemplates(v bool) {
	o.IncludeTemplates = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *AwsPush) GetDryRun() bool {
	if o == nil || IsNil(o.DryRun) {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetDryRunOk() (*bool, bool) {
	if o == nil || IsNil(o.DryRun) {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *AwsPush) HasDryRun() bool {
	if o != nil && !IsNil(o.DryRun) {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *AwsPush) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *AwsPush) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *AwsPush) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *AwsPush) SetForce(v bool) {
	o.Force = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *AwsPush) GetLocal() bool {
	if o == nil || IsNil(o.Local) {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetLocalOk() (*bool, bool) {
	if o == nil || IsNil(o.Local) {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *AwsPush) HasLocal() bool {
	if o != nil && !IsNil(o.Local) {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *AwsPush) SetLocal(v bool) {
	o.Local = &v
}

// GetProjects returns the Projects field value
func (o *AwsPush) GetProjects() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetProjectsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Projects, true
}

// SetProjects sets field value
func (o *AwsPush) SetProjects(v []string) {
	o.Projects = v
}

// GetTags returns the Tags field value
func (o *AwsPush) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *AwsPush) SetTags(v []string) {
	o.Tags = v
}

// GetRegion returns the Region field value
func (o *AwsPush) GetRegion() AwsRegionEnum {
	if o == nil {
		var ret AwsRegionEnum
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetRegionOk() (*AwsRegionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AwsPush) SetRegion(v AwsRegionEnum) {
	o.Region = v
}

// GetService returns the Service field value
func (o *AwsPush) GetService() AwsServiceEnum {
	if o == nil {
		var ret AwsServiceEnum
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetServiceOk() (*AwsServiceEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *AwsPush) SetService(v AwsServiceEnum) {
	o.Service = v
}

// GetResource returns the Resource field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AwsPush) GetResource() string {
	if o == nil || o.Resource.Get() == nil {
		var ret string
		return ret
	}

	return *o.Resource.Get()
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsPush) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resource.Get(), o.Resource.IsSet()
}

// SetResource sets field value
func (o *AwsPush) SetResource(v string) {
	o.Resource.Set(&v)
}

func (o AwsPush) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsPush) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["latest_task"] = o.LatestTask.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["modified_at"] = o.ModifiedAt.Get()
	if !IsNil(o.CoerceParameters) {
		toSerialize["coerce_parameters"] = o.CoerceParameters
	}
	if !IsNil(o.IncludeParameters) {
		toSerialize["include_parameters"] = o.IncludeParameters
	}
	if !IsNil(o.IncludeSecrets) {
		toSerialize["include_secrets"] = o.IncludeSecrets
	}
	if !IsNil(o.IncludeTemplates) {
		toSerialize["include_templates"] = o.IncludeTemplates
	}
	if !IsNil(o.DryRun) {
		toSerialize["dry_run"] = o.DryRun
	}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.Local) {
		toSerialize["local"] = o.Local
	}
	toSerialize["projects"] = o.Projects
	toSerialize["tags"] = o.Tags
	toSerialize["region"] = o.Region
	toSerialize["service"] = o.Service
	toSerialize["resource"] = o.Resource.Get()
	return toSerialize, nil
}

type NullableAwsPush struct {
	value *AwsPush
	isSet bool
}

func (v NullableAwsPush) Get() *AwsPush {
	return v.value
}

func (v *NullableAwsPush) Set(val *AwsPush) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPush) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPush) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPush(val *AwsPush) *NullableAwsPush {
	return &NullableAwsPush{value: val, isSet: true}
}

func (v NullableAwsPush) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPush) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


