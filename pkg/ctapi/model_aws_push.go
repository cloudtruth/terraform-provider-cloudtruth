/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ctapi

import (
	"encoding/json"
	"time"
)

// AwsPush Push actions can be configured to send configuration and secrets to integrations when tags are updated.
type AwsPush struct {
	Url string `json:"url"`
	// Unique identifier for the action.
	Id string `json:"id"`
	// The action name.
	Name string `json:"name"`
	// The optional description for the action.
	Description *string `json:"description,omitempty"`
	// The most recent task run for this action.
	LatestTask NullableAwsPushTask `json:"latest_task"`
	CreatedAt  time.Time           `json:"created_at"`
	ModifiedAt time.Time           `json:"modified_at"`
	// Projects that are included in the push.
	Projects []string `json:"projects"`
	// Tags are used to select parameters by environment from the projects included in the push.  You cannot have two tags from the same environment in the same push.
	Tags []string `json:"tags"`
	// The AWS region this push targets.  This region must be enabled in the integration.
	Region AwsRegionEnum `json:"region"`
	// The AWS service this push targets.  This service must be enabled in the integration.
	Service AwsServiceEnum `json:"service"`
	// Defines a path through the integration to the location where values will be pushed.  The following mustache-style substitutions can be used in the string:    - ``{{ environment }}`` to insert the environment name   - ``{{ parameter }}`` to insert the parameter name   - ``{{ project }}`` to insert the project name   - ``{{ push }}`` to insert the push name   - ``{{ tag }}`` to insert the tag name  We recommend that you use project, environment, and parameter at a minimum to disambiguate your pushed resource identifiers.  If you include multiple projects in the push, the `project` substitution is required.  If you include multiple tags from different environments in the push, the `environment` substitution is required.  If you include multiple tags from the same environment in the push, the `tag` substitution is required.  In all cases, the `parameter` substitution is always required.
	Resource string `json:"resource"`
}

// NewAwsPush instantiates a new AwsPush object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsPush(url string, id string, name string, latestTask NullableAwsPushTask, createdAt time.Time, modifiedAt time.Time, projects []string, tags []string, region AwsRegionEnum, service AwsServiceEnum, resource string) *AwsPush {
	this := AwsPush{}
	this.Url = url
	this.Id = id
	this.Name = name
	this.LatestTask = latestTask
	this.CreatedAt = createdAt
	this.ModifiedAt = modifiedAt
	this.Projects = projects
	this.Tags = tags
	this.Region = region
	this.Service = service
	this.Resource = resource
	return &this
}

// NewAwsPushWithDefaults instantiates a new AwsPush object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsPushWithDefaults() *AwsPush {
	this := AwsPush{}
	return &this
}

// GetUrl returns the Url field value
func (o *AwsPush) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AwsPush) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *AwsPush) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AwsPush) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AwsPush) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AwsPush) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsPush) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsPush) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsPush) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AwsPush) SetDescription(v string) {
	o.Description = &v
}

// GetLatestTask returns the LatestTask field value
// If the value is explicit nil, the zero value for AwsPushTask will be returned
func (o *AwsPush) GetLatestTask() AwsPushTask {
	if o == nil || o.LatestTask.Get() == nil {
		var ret AwsPushTask
		return ret
	}

	return *o.LatestTask.Get()
}

// GetLatestTaskOk returns a tuple with the LatestTask field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsPush) GetLatestTaskOk() (*AwsPushTask, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestTask.Get(), o.LatestTask.IsSet()
}

// SetLatestTask sets field value
func (o *AwsPush) SetLatestTask(v AwsPushTask) {
	o.LatestTask.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *AwsPush) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AwsPush) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *AwsPush) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *AwsPush) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetProjects returns the Projects field value
func (o *AwsPush) GetProjects() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetProjectsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Projects, true
}

// SetProjects sets field value
func (o *AwsPush) SetProjects(v []string) {
	o.Projects = v
}

// GetTags returns the Tags field value
func (o *AwsPush) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetTagsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *AwsPush) SetTags(v []string) {
	o.Tags = v
}

// GetRegion returns the Region field value
func (o *AwsPush) GetRegion() AwsRegionEnum {
	if o == nil {
		var ret AwsRegionEnum
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetRegionOk() (*AwsRegionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AwsPush) SetRegion(v AwsRegionEnum) {
	o.Region = v
}

// GetService returns the Service field value
func (o *AwsPush) GetService() AwsServiceEnum {
	if o == nil {
		var ret AwsServiceEnum
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetServiceOk() (*AwsServiceEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *AwsPush) SetService(v AwsServiceEnum) {
	o.Service = v
}

// GetResource returns the Resource field value
func (o *AwsPush) GetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *AwsPush) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *AwsPush) SetResource(v string) {
	o.Resource = v
}

func (o AwsPush) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["latest_task"] = o.LatestTask.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if true {
		toSerialize["projects"] = o.Projects
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["service"] = o.Service
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableAwsPush struct {
	value *AwsPush
	isSet bool
}

func (v NullableAwsPush) Get() *AwsPush {
	return v.value
}

func (v *NullableAwsPush) Set(val *AwsPush) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsPush) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsPush) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsPush(val *AwsPush) *NullableAwsPush {
	return &NullableAwsPush{value: val, isSet: true}
}

func (v NullableAwsPush) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsPush) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
