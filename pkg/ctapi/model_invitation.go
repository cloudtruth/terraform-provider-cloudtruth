/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ctapi

import (
	"encoding/json"
)

// Invitation struct for Invitation
type Invitation struct {
	Url string `json:"url"`
	// The unique identifier of an invitation.
	Id string `json:"id"`
	// The email address of the user to be invited.
	Email string `json:"email"`
	// The role that the user will have in the organization, should the user accept.
	Role RoleEnum `json:"role"`
	// The user that created the invitation.
	Inviter string `json:"inviter"`
	// The name of the user that created the invitation.
	InviterName string `json:"inviter_name"`
	// The current state of the invitation.
	State string `json:"state"`
	// Additional details about the state of the invitation.
	StateDetail string `json:"state_detail"`
	// The resulting membership, should the user accept.
	Membership string `json:"membership"`
}

// NewInvitation instantiates a new Invitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvitation(url string, id string, email string, role RoleEnum, inviter string, inviterName string, state string, stateDetail string, membership string) *Invitation {
	this := Invitation{}
	this.Url = url
	this.Id = id
	this.Email = email
	this.Role = role
	this.Inviter = inviter
	this.InviterName = inviterName
	this.State = state
	this.StateDetail = stateDetail
	this.Membership = membership
	return &this
}

// NewInvitationWithDefaults instantiates a new Invitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvitationWithDefaults() *Invitation {
	this := Invitation{}
	return &this
}

// GetUrl returns the Url field value
func (o *Invitation) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Invitation) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *Invitation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Invitation) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *Invitation) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Invitation) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value
func (o *Invitation) GetRole() RoleEnum {
	if o == nil {
		var ret RoleEnum
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetRoleOk() (*RoleEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *Invitation) SetRole(v RoleEnum) {
	o.Role = v
}

// GetInviter returns the Inviter field value
func (o *Invitation) GetInviter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetInviterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inviter, true
}

// SetInviter sets field value
func (o *Invitation) SetInviter(v string) {
	o.Inviter = v
}

// GetInviterName returns the InviterName field value
func (o *Invitation) GetInviterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InviterName
}

// GetInviterNameOk returns a tuple with the InviterName field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetInviterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InviterName, true
}

// SetInviterName sets field value
func (o *Invitation) SetInviterName(v string) {
	o.InviterName = v
}

// GetState returns the State field value
func (o *Invitation) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Invitation) SetState(v string) {
	o.State = v
}

// GetStateDetail returns the StateDetail field value
func (o *Invitation) GetStateDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateDetail
}

// GetStateDetailOk returns a tuple with the StateDetail field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetStateDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateDetail, true
}

// SetStateDetail sets field value
func (o *Invitation) SetStateDetail(v string) {
	o.StateDetail = v
}

// GetMembership returns the Membership field value
func (o *Invitation) GetMembership() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Membership
}

// GetMembershipOk returns a tuple with the Membership field value
// and a boolean to check if the value has been set.
func (o *Invitation) GetMembershipOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Membership, true
}

// SetMembership sets field value
func (o *Invitation) SetMembership(v string) {
	o.Membership = v
}

func (o Invitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["inviter"] = o.Inviter
	}
	if true {
		toSerialize["inviter_name"] = o.InviterName
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["state_detail"] = o.StateDetail
	}
	if true {
		toSerialize["membership"] = o.Membership
	}
	return json.Marshal(toSerialize)
}

type NullableInvitation struct {
	value *Invitation
	isSet bool
}

func (v NullableInvitation) Get() *Invitation {
	return v.value
}

func (v *NullableInvitation) Set(val *Invitation) {
	v.value = val
	v.isSet = true
}

func (v NullableInvitation) IsSet() bool {
	return v.isSet
}

func (v *NullableInvitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvitation(val *Invitation) *NullableInvitation {
	return &NullableInvitation{value: val, isSet: true}
}

func (v NullableInvitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
