/*
CloudTruth Management API

CloudTruth centralizes your configuration parameters and secrets making them easier to manage and use as a team.

API version: v1
Contact: support@cloudtruth.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ctapi

import (
	"encoding/json"
	"time"
)

// PatchedTemplate A parameter template in a given project, optionally instantiated against an environment.
type PatchedTemplate struct {
	// The templates this value references, if interpolated.
	Url *string `json:"url,omitempty"`
	// A unique identifier for the template.
	Id *string `json:"id,omitempty"`
	// The template name.
	Name *string `json:"name,omitempty"`
	// ('A description of the template.  You may find it helpful to document how this template is used to assist others when they need to maintain software that uses this content.',)
	Description *string `json:"description,omitempty"`
	// If true, the `body` field has undergone evaluation.
	Evaluated *bool `json:"evaluated,omitempty"`
	// The content of the template.  Use mustache-style templating delimiters of `{{` and `}}` to reference parameter values by name for substitution into the template result.
	Body *string `json:"body,omitempty"`
	// Parameters that this template references.
	ReferencedParameters *[]string `json:"referenced_parameters,omitempty"`
	// Other templates that this template references.
	ReferencedTemplates *[]string `json:"referenced_templates,omitempty"`
	// Other templates that reference this template.
	ReferencingTemplates *[]string `json:"referencing_templates,omitempty"`
	// The dynamic values that reference this template.
	ReferencingValues *[]string `json:"referencing_values,omitempty"`
	// If True, this template contains secrets.
	HasSecret  *bool      `json:"has_secret,omitempty"`
	CreatedAt  *time.Time `json:"created_at,omitempty"`
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
}

// NewPatchedTemplate instantiates a new PatchedTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedTemplate() *PatchedTemplate {
	this := PatchedTemplate{}
	return &this
}

// NewPatchedTemplateWithDefaults instantiates a new PatchedTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedTemplateWithDefaults() *PatchedTemplate {
	this := PatchedTemplate{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PatchedTemplate) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchedTemplate) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PatchedTemplate) SetUrl(v string) {
	o.Url = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchedTemplate) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchedTemplate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchedTemplate) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedTemplate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedTemplate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedTemplate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedTemplate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedTemplate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedTemplate) SetDescription(v string) {
	o.Description = &v
}

// GetEvaluated returns the Evaluated field value if set, zero value otherwise.
func (o *PatchedTemplate) GetEvaluated() bool {
	if o == nil || o.Evaluated == nil {
		var ret bool
		return ret
	}
	return *o.Evaluated
}

// GetEvaluatedOk returns a tuple with the Evaluated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetEvaluatedOk() (*bool, bool) {
	if o == nil || o.Evaluated == nil {
		return nil, false
	}
	return o.Evaluated, true
}

// HasEvaluated returns a boolean if a field has been set.
func (o *PatchedTemplate) HasEvaluated() bool {
	if o != nil && o.Evaluated != nil {
		return true
	}

	return false
}

// SetEvaluated gets a reference to the given bool and assigns it to the Evaluated field.
func (o *PatchedTemplate) SetEvaluated(v bool) {
	o.Evaluated = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *PatchedTemplate) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *PatchedTemplate) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *PatchedTemplate) SetBody(v string) {
	o.Body = &v
}

// GetReferencedParameters returns the ReferencedParameters field value if set, zero value otherwise.
func (o *PatchedTemplate) GetReferencedParameters() []string {
	if o == nil || o.ReferencedParameters == nil {
		var ret []string
		return ret
	}
	return *o.ReferencedParameters
}

// GetReferencedParametersOk returns a tuple with the ReferencedParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetReferencedParametersOk() (*[]string, bool) {
	if o == nil || o.ReferencedParameters == nil {
		return nil, false
	}
	return o.ReferencedParameters, true
}

// HasReferencedParameters returns a boolean if a field has been set.
func (o *PatchedTemplate) HasReferencedParameters() bool {
	if o != nil && o.ReferencedParameters != nil {
		return true
	}

	return false
}

// SetReferencedParameters gets a reference to the given []string and assigns it to the ReferencedParameters field.
func (o *PatchedTemplate) SetReferencedParameters(v []string) {
	o.ReferencedParameters = &v
}

// GetReferencedTemplates returns the ReferencedTemplates field value if set, zero value otherwise.
func (o *PatchedTemplate) GetReferencedTemplates() []string {
	if o == nil || o.ReferencedTemplates == nil {
		var ret []string
		return ret
	}
	return *o.ReferencedTemplates
}

// GetReferencedTemplatesOk returns a tuple with the ReferencedTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetReferencedTemplatesOk() (*[]string, bool) {
	if o == nil || o.ReferencedTemplates == nil {
		return nil, false
	}
	return o.ReferencedTemplates, true
}

// HasReferencedTemplates returns a boolean if a field has been set.
func (o *PatchedTemplate) HasReferencedTemplates() bool {
	if o != nil && o.ReferencedTemplates != nil {
		return true
	}

	return false
}

// SetReferencedTemplates gets a reference to the given []string and assigns it to the ReferencedTemplates field.
func (o *PatchedTemplate) SetReferencedTemplates(v []string) {
	o.ReferencedTemplates = &v
}

// GetReferencingTemplates returns the ReferencingTemplates field value if set, zero value otherwise.
func (o *PatchedTemplate) GetReferencingTemplates() []string {
	if o == nil || o.ReferencingTemplates == nil {
		var ret []string
		return ret
	}
	return *o.ReferencingTemplates
}

// GetReferencingTemplatesOk returns a tuple with the ReferencingTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetReferencingTemplatesOk() (*[]string, bool) {
	if o == nil || o.ReferencingTemplates == nil {
		return nil, false
	}
	return o.ReferencingTemplates, true
}

// HasReferencingTemplates returns a boolean if a field has been set.
func (o *PatchedTemplate) HasReferencingTemplates() bool {
	if o != nil && o.ReferencingTemplates != nil {
		return true
	}

	return false
}

// SetReferencingTemplates gets a reference to the given []string and assigns it to the ReferencingTemplates field.
func (o *PatchedTemplate) SetReferencingTemplates(v []string) {
	o.ReferencingTemplates = &v
}

// GetReferencingValues returns the ReferencingValues field value if set, zero value otherwise.
func (o *PatchedTemplate) GetReferencingValues() []string {
	if o == nil || o.ReferencingValues == nil {
		var ret []string
		return ret
	}
	return *o.ReferencingValues
}

// GetReferencingValuesOk returns a tuple with the ReferencingValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetReferencingValuesOk() (*[]string, bool) {
	if o == nil || o.ReferencingValues == nil {
		return nil, false
	}
	return o.ReferencingValues, true
}

// HasReferencingValues returns a boolean if a field has been set.
func (o *PatchedTemplate) HasReferencingValues() bool {
	if o != nil && o.ReferencingValues != nil {
		return true
	}

	return false
}

// SetReferencingValues gets a reference to the given []string and assigns it to the ReferencingValues field.
func (o *PatchedTemplate) SetReferencingValues(v []string) {
	o.ReferencingValues = &v
}

// GetHasSecret returns the HasSecret field value if set, zero value otherwise.
func (o *PatchedTemplate) GetHasSecret() bool {
	if o == nil || o.HasSecret == nil {
		var ret bool
		return ret
	}
	return *o.HasSecret
}

// GetHasSecretOk returns a tuple with the HasSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetHasSecretOk() (*bool, bool) {
	if o == nil || o.HasSecret == nil {
		return nil, false
	}
	return o.HasSecret, true
}

// HasHasSecret returns a boolean if a field has been set.
func (o *PatchedTemplate) HasHasSecret() bool {
	if o != nil && o.HasSecret != nil {
		return true
	}

	return false
}

// SetHasSecret gets a reference to the given bool and assigns it to the HasSecret field.
func (o *PatchedTemplate) SetHasSecret(v bool) {
	o.HasSecret = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PatchedTemplate) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PatchedTemplate) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PatchedTemplate) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *PatchedTemplate) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedTemplate) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *PatchedTemplate) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *PatchedTemplate) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

func (o PatchedTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Evaluated != nil {
		toSerialize["evaluated"] = o.Evaluated
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.ReferencedParameters != nil {
		toSerialize["referenced_parameters"] = o.ReferencedParameters
	}
	if o.ReferencedTemplates != nil {
		toSerialize["referenced_templates"] = o.ReferencedTemplates
	}
	if o.ReferencingTemplates != nil {
		toSerialize["referencing_templates"] = o.ReferencingTemplates
	}
	if o.ReferencingValues != nil {
		toSerialize["referencing_values"] = o.ReferencingValues
	}
	if o.HasSecret != nil {
		toSerialize["has_secret"] = o.HasSecret
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.ModifiedAt != nil {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedTemplate struct {
	value *PatchedTemplate
	isSet bool
}

func (v NullablePatchedTemplate) Get() *PatchedTemplate {
	return v.value
}

func (v *NullablePatchedTemplate) Set(val *PatchedTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedTemplate(val *PatchedTemplate) *NullablePatchedTemplate {
	return &NullablePatchedTemplate{value: val, isSet: true}
}

func (v NullablePatchedTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
